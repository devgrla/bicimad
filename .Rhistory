head(total, Encoding='ISO-8859-9')
head(total, Encoding='ISO-8859-1')
head(total, encoding='ISO-8859-1')
head(total, encoding='ISO-8859-2')
head(total, encoding='ISO-8859-9')
head(total)
head(total)
head(total)
head(total)
head(total)
kk <- readLines("../dat/Bicimad_Stations_201811.json")
kk= paste(kk, collapse="")
tmp <- fromJSON(kk)
kk <- readLines("dat/Bicimad_Stations_201811.json")
kk= paste(kk, collapse="")
tmp <- fromJSON(kk)
total<- c()
for (var in tmp$root[]){
id<- var$`_id`
stations<- var$stations
res <- ldply(var$stations, as.data.frame)
res$id <- id
total<- rbind(total,res)
}
data_tmp3 <- data.copy
data_tmp3 <- data_tmp2[(data_tmp3$magnitud == 'Dioxido de nitrogeno NO2') & (data_tmp3$estacion == 'El Pardo') &
(data_tmp3$fecha %in% c(as.Date("2018-12-5"), as.Date("2018-12-12"), as.Date("2018-12-25"),as.Date("2018-12-6"),
as.Date("2018-12-26"), as.Date("2018-12-27"), as.Date("2018-12-28"),
as.Date("2018-1-23"), as.Date("2018-1-24"), as.Date("2018-12-7"))),]
data_tmp3[,c(1,6)]
row.names(data_tmp3)<-NULL
data_tmp3 <- data.copy
data_tmp3 <- data_tmp3[(data_tmp3$magnitud == 'Dioxido de nitrogeno NO2') & (data_tmp3$estacion == 'El Pardo') &
(data_tmp3$fecha %in% c(as.Date("2018-12-5"), as.Date("2018-12-12"), as.Date("2018-12-25"),as.Date("2018-12-6"),
as.Date("2018-12-26"), as.Date("2018-12-27"), as.Date("2018-12-28"),
as.Date("2018-1-23"), as.Date("2018-1-24"), as.Date("2018-12-7"))),]
row.names(data_tmp3)<-NULL
data_tmp3 <- data.copy
data_tmp3 <- data_tmp3[(data_tmp3$magnitud == 'Dioxido de nitrogeno NO2') & (data_tmp3$estacion == 'El Pardo') &
(data_tmp3$fecha %in% c(as.Date("2018-12-5"), as.Date("2018-12-12"), as.Date("2018-12-25"),as.Date("2018-12-6"),
as.Date("2018-12-26"), as.Date("2018-12-27"), as.Date("2018-12-28"),
as.Date("2018-1-23"), as.Date("2018-1-24"), as.Date("2018-12-7"))),]
data_tmp3 <- data2018.copy
data_tmp3 <- data_tmp3[(data_tmp3$magnitud == 'Dioxido de nitrogeno NO2') & (data_tmp3$estacion == 'El Pardo') &
(data_tmp3$fecha %in% c(as.Date("2018-12-5"), as.Date("2018-12-12"), as.Date("2018-12-25"),as.Date("2018-12-6"),
as.Date("2018-12-26"), as.Date("2018-12-27"), as.Date("2018-12-28"),
as.Date("2018-1-23"), as.Date("2018-1-24"), as.Date("2018-12-7"))),]
row.names(data_tmp3)<-NULL
data_tmp3[,c(1,6)]
data_tmp4 <- rbind(data_tmp2, data_tmp3)
head(data_tmp4)
data_tmp4
ggplot(data_tmp4, aes(x=fecha, y =medicion, colour=ano)) + geom_line() + theme() +
labs(title="Mediciones en días de protocolos de contaminación Retiro vs El Pardo",x="Fecha", y = "Medición")
ggplot(data_tmp4, aes(x=fecha, y =medicion)) + geom_line() + theme() +
labs(title="Mediciones en días de protocolos de contaminación Retiro vs El Pardo",x="Fecha", y = "Medición")
ggplot(data_tmp4, aes(x=fecha, y =medicion, colour=estacion)) + geom_line() + theme() +
labs(title="Mediciones en días de protocolos de contaminación Retiro vs El Pardo",x="Fecha", y = "Medición")
ggplot(data_tmp4, aes(x=fecha, y =medicion, colour=estacion)) + geom_line() + theme_minimal() +
labs(title="Mediciones en días de protocolos de contaminación Retiro vs El Pardo",x="Fecha", y = "Medición")
data_tmp5<- ddply(data_tmp4, .(ano, estacion), transform, media_estacion = mean(medicion))
ggplot(data_tmp5, aes(x=ano, y =medicion, colour=estacion)) + geom_col() + theme() +
labs(title="Promedio anual estaciones céntricas y fuera de madrid",x="Año", y = "Medición") + scale_fill_brewer(palette="Dark2")
head(data_tmp5)
data_tmp5
data_tmp5<- ddply(data.copy, .(ano, estacion), transform, media_estacion = mean(medicion))
data_tmp5
data_tmp4
data_tmp5<- ddply(data_tmp4, .(ano, estacion), transform, media_estacion = mean(medicion))
data_tmp5
data_tmp <- data2018.copy[(data2018.copy$magnitud == 'Dioxido de nitrogeno NO2') & (data2018.copy$estacion %in% c('El Pardo','Retiro'),]
data_tmp <- data2018.copy[(data2018.copy$magnitud == 'Dioxido de nitrogeno NO2') & (data2018.copy$estacion %in% c('El Pardo','Retiro')),]
data_tmp<- ddply(data_tmp, .(ano, estacion), transform, media_estacion = mean(medicion))
data_tmp
data_tmp<- ddply(data_tmp, .(ano, estacion), summarize, media_estacion = mean(medicion))
data_tmp
ggplot(data_tmp, aes(x=ano, y =media_estacion, colour=estacion)) + geom_col() + theme() +
labs(title="Promedio anual estaciones céntricas y fuera de madrid",x="Año", y = "Medición") + scale_fill_brewer(palette="Dark2")
ggplot(data_tmp, aes(x=ano, y =media_estacion, colour=estacion)) + geom_bar() + theme() +
labs(title="Promedio anual estaciones céntricas y fuera de madrid",x="Año", y = "Medición") + scale_fill_brewer(palette="Dark2")
ggplot(data_tmp, aes(x=ano, y =media_estacion, colour=estacion)) + geom_col() + theme() +
labs(title="Promedio anual estaciones céntricas y fuera de madrid",x="Año", y = "Medición") + scale_fill_brewer(palette="Dark2")
ggplot(data_tmp, aes(x=ano, y =media_estacion, fill=estacion)) + geom_col() + theme() +
labs(title="Promedio anual estaciones céntricas y fuera de madrid",x="Año", y = "Medición") + scale_fill_brewer(palette="Dark2")
ggplot(data_tmp, aes(x=ano, media_estacion, fill=estacion)) + geom_col() + theme() +
labs(title="Promedio anual estaciones céntricas y fuera de madrid",x="Año", y = "Medición") + scale_fill_brewer(palette="Dark2")
data_tmp$estacion <- as.factor(as.character(data_tmp$estacion))
ggplot(data_tmp, aes(x=ano, media_estacion, fill=estacion)) + geom_col() + theme() +
labs(title="Promedio anual estaciones céntricas y fuera de madrid",x="Año", y = "Medición") + scale_fill_brewer(palette="Dark2")
data_tmp <- data2018.copy[(data2018.copy$magnitud == 'Dioxido de nitrogeno NO2') & (data2018.copy$estacion %in% c('El Pardo','Retiro')),]
data_tmp<- ddply(data_tmp, .(ano, estacion), summarize, media_estacion = mean(medicion))
ggplot(data_tmp, aes(x=ano, media_estacion, fill=estacion)) + geom_col() + theme() +
labs(title="Promedio anual estaciones céntricas y fuera de madrid",x="Año", y = "Medición") + scale_fill_brewer(palette="Dark2")
tmp<- ddply(data2018.copy, .(ano, magnitud), summarize, maximos = max(medicion))
tmp
data_tmp <- data2018.copy[(data2018.copy$magnitud == 'Dioxido de nitrogeno NO2') & (data2018.copy$estacion %in% c('El Pardo','Retiro')),]
data_tmp<- ddply(data_tmp, .(ano, estacion), summarize, media_estacion = mean(medicion))
data_tmp
ggplot(tmp, aes(x = magnitud, media_estacion, fill=estacion)) + geom_col() + theme(axis.text.x = element_blank(),  axis.ticks = element_blank())
data_tmp<- ddply(data_tmp, .(ano, estacion), summarize, media_estacion = mean(medicion))
data_tmp <- data2018.copy[(data2018.copy$magnitud == 'Dioxido de nitrogeno NO2') & (data2018.copy$estacion %in% c('El Pardo','Retiro')),]
data_tmp<- ddply(data_tmp, .(ano, estacion), summarize, media_estacion = mean(medicion))
ggplot(tmp, aes(x = magnitud, media_estacion, fill=estacion)) + geom_col() + theme(axis.text.x = element_blank(),  axis.ticks = element_blank())
ggplot(data_tmp, aes(x = magnitud, media_estacion, fill=estacion)) + geom_col() + theme(axis.text.x = element_blank(),  axis.ticks = element_blank())
ggplot(data_tmp, aes(x = ano, media_estacion, fill=estacion)) + geom_col() + theme(axis.text.x = element_blank(),  axis.ticks = element_blank())
ggplot(data_tmp, aes(x = ano, media_estacion, fill=estacion)) + geom_col() + facet_grid(ano ~ .) + theme(axis.text.x = element_blank(),  axis.ticks = element_blank())
ggplot(tmp, aes(x = magnitud, maximos, fill=magnitud)) + geom_col() + facet_grid(ano ~ .) + theme(axis.text.x = element_blank(),  axis.ticks = element_blank())
ggplot(tmp, aes(x = magnitud, maximos, fill=magnitud)) + geom_col() + facet_grid(. ~ ano) + theme(axis.text.x =element_blank(),axis.ticks = element_blank()) +scale_fill_brewer(palette="Dark2") +
labs(title="Máximos anuales por contaminante",x="Magnitud", y = "Máximos")
ggplot(data_tmp, aes(x=ano, media_estacion, fill=estacion)) + geom_col() + facet_grid(. ~ ano) + theme() +
labs(title="Promedio anual estaciones céntricas y fuera de madrid",x="Año", y = "Medición") + scale_fill_brewer(palette="Dark2")
data_tmp <- data.copy[(data.copy$magnitud == 'Dioxido de nitrogeno NO2') & (data.copy$estacion %in% c('El Pardo','Retiro')),]
ggplot(data_tmp, aes(x=ano, media_estacion, fill=estacion, posi)) + geom_col(stat="identity", position="dodge") + theme() +
labs(title="Promedio anual estaciones céntricas y fuera de madrid",x="Año", y = "Medición") + scale_fill_brewer(palette="Dark2")
ggplot(data_tmp, aes(x=ano, media_estacion, fill=estacion)) + geom_col(stat="identity", position="dodge") + theme() +
labs(title="Promedio anual estaciones céntricas y fuera de madrid",x="Año", y = "Medición") + scale_fill_brewer(palette="Dark2")
sapply(airquality[, 1:4], mean, na.rm = TRUE)
lapply(airquality[, 1:4], mean, na.rm = TRUE) #Apply una funcion a una lista. A las columnas 1 a 4 le aplico la funcion media ignorando NA
#EL TRANSFORM, transforma, no achica el numero de columnas
ddply(iris, .(), transform, diff_petal_length = Petal.Length - mean(Petal.Length))
#EL TRANSFORM, transforma, no achica el numero de columnas
ddply(iris, .(.), transform, diff_petal_length = Petal.Length - mean(Petal.Length))
library(plyr)
#EL TRANSFORM, transforma, no achica el numero de columnas
ddply(iris, .(.), transform, diff_petal_length = Petal.Length - mean(Petal.Length))
#EL TRANSFORM, transforma, no achica el numero de columnas
ddply(iris, .(), transform, diff_petal_length = Petal.Length - mean(Petal.Length))
foo <- function(x){
modelo <- lm(extro ~ open + agree + social + class, data = x)
res <- x
res$preds <- predict(modelo)
res
}
dat.preds <- ddply(dat, .(school), foo)
#En este ejercicio la idea es hacer un modelo por colegio y crear una prediccion del modelo.
#Creamos en cada bloque un modelo y lo aplicamos.
dat <- read.table("data/lmm_data.txt", header = T, sep = ",")
dat.preds <- ddply(dat, .(school), transform,
pred = predict(lm(extro ~ open + agree + social + class)))
foo <- function(x){
modelo <- lm(extro ~ open + agree + social + class, data = x)
res <- x
res$preds <- predict(modelo)
res
}
get_season<- function(x){
date = x$fecha
return(date)
}
data2018.copy$season <- lapply(data2018.copy, get_season)
print(x)
get_season<- function(x){
print(x)
date = x$fecha
return(date)
}
data2018.copy$season <- lapply(data2018.copy, get_season())
print(as.str(x))
get_season<- function(x){
print(as.character(x))
date = x$fecha
return(date)
}
data2018.copy$season <- lapply(data2018.copy, get_season())
get_season<- function(x){
date = x$fecha
return(date)
}
data2018.copy$season <- lapply(data2018.copy, get_season)
get_season<- function(x){
date = fecha
return(date)
}
get_season<- function(x){
date = x
return(date)
}
data2018.copy$season <- lapply(data2018.copy, get_season(data2018.copy$fecha))
data2018.copy
get_season<- function(x){
date = x['fecha']
return(date)
}
data2018.copy$season <- lapply(data2018.copy, get_season)
date = x['fecha',]
get_season<- function(x){
date = x['fecha',]
return(date)
}
data2018.copy$season <- lapply(data2018.copy, get_season)
funcion<- function(x){
length(read_lines(x))
}
v <- dir("data", full.names = TRUE)
sapply(v, funcion)
f = function(x, output) {
# x is the row of type Character
# access element in first column
name = x[1]
# access element in second column
income = x[3]
#your code to process x
cat(name, income, "\n")
}
#apply(X, MARGIN, FUN, …)
apply(data2018.copy, 1, f)
#apply(X, MARGIN, FUN, …)
data2018.copy$prueba<- apply(data2018.copy, 1, f)
data2018.copy
f = function(x, output) {
# x is the row of type Character
# access element in first column
name = x[1]
# access element in second column
income = x[3]
#your code to process x
return (1)
}
#apply(X, MARGIN, FUN, …)
data2018.copy$prueba<- apply(data2018.copy, 1, f)
data2018.copy
#your code to process x
return (x[1])
f<- function(x, output) {
# x is the row of type Character
# access element in first column
name = x[1]
# access element in second column
income = x[3]
#your code to process x
return (x[1])
}
#apply(X, MARGIN, FUN, …)
data2018.copy$prueba<- apply(data2018.copy, 1, f)
data2018.copy
f<- function(x) {
date = x[1]
if (date >= as.Date(str(date.year) + '-03-21') & as.Date(str(date.year) + '-06-20'))
return('Primavera')
else
return('Invierno')
}
#apply(X, MARGIN, FUN, …)
data2018.copy$prueba<- apply(data2018.copy, 1, f)
f<- function(x) {
date = x[1]
if (date >= as.Date(str(year(date)) + '-03-21') & as.Date(str(date.year) + '-06-20'))
return('Primavera')
else
return('Invierno')
}
#apply(X, MARGIN, FUN, …)
data2018.copy$prueba<- apply(data2018.copy, 1, f)
if (date >= as.Date(str(year(ymd(date))) + '-03-21') & as.Date(str(date.year) + '-06-20'))
f<- function(x) {
date = x[1]
if (date >= as.Date(str(year(ymd(date))) + '-03-21') & as.Date(str(date.year) + '-06-20'))
return('Primavera')
else
return('Invierno')
}
library(lubridate)
f<- function(x) {
date = x[1]
if (date >= as.Date(str(year(ymd(date))) + '-03-21') & as.Date(str(date.year) + '-06-20'))
return('Primavera')
else
return('Invierno')
}
#apply(X, MARGIN, FUN, …)
data2018.copy$prueba<- apply(data2018.copy, 1, f)
f<- function(x) {
date = x[1]
if (date >= as.Date(as.character(year(ymd(date))) + '-03-21') & as.Date(str(date.year) + '-06-20'))
return('Primavera')
else
return('Invierno')
}
#apply(X, MARGIN, FUN, …)
data2018.copy$prueba<- apply(data2018.copy, 1, f)
f<- function(x) {
date = x[1]
print(year(ymd(date)))
# if (date >= as.Date(as.chara(year(ymd(date))) + '-03-21') & as.Date(str(date.year) + '-06-20'))
#   return('Primavera')
# else
#   return('Invierno')
}
#apply(X, MARGIN, FUN, …)
data2018.copy$prueba<- apply(data2018.copy, 1, f)
f<- function(x) {
date <- x[1]
year <- as.character(year(ymd(date))) + '-03-21'
if (date >= as.Date(year))
return('Primavera')
else
return('Invierno')
}
#apply(X, MARGIN, FUN, …)
data2018.copy$prueba<- apply(data2018.copy, 1, f)
f<- function(x) {
date <- x[1]
year <- c(as.character(year(ymd(date))), '-03-21')
if (date >= as.Date(year))
return('Primavera')
else
return('Invierno')
}
#apply(X, MARGIN, FUN, …)
data2018.copy$prueba<- apply(data2018.copy, 1, f)
year <- as.Date(c(as.character(year(ymd(date))), '-03-21'))
date <- x[1]
f<- function(x) {
date <- x[1]
year <- as.Date(c(as.character(year(ymd(date))), '-03-21'))
print(year)
if (date >= as.Date(year))
return('Primavera')
else
return('Invierno')
}
#apply(X, MARGIN, FUN, …)
data2018.copy$prueba<- apply(data2018.copy, 1, f)
year <- c(as.character(year(ymd(date))), '-03-21')
f<- function(x) {
date <- x[1]
year <- c(as.character(year(ymd(date))), '-03-21')
print(year)
if (date >= as.Date(year))
return('Primavera')
else
return('Invierno')
}
#apply(X, MARGIN, FUN, …)
data2018.copy$prueba<- apply(data2018.copy, 1, f)
f<- function(x) {
date <- x[1]
year <- paste(as.character(year(ymd(date))), '-03-21')
print(year)
if (date >= as.Date(year))
return('Primavera')
else
return('Invierno')
}
#apply(X, MARGIN, FUN, …)
data2018.copy$prueba<- apply(data2018.copy, 1, f)
f<- function(x) {
date <- x[1]
year <- paste(as.character(year(ymd(date))),'-03-21')
print(year)
if (date >= as.Date(year))
return('Primavera')
else
return('Invierno')
}
#apply(X, MARGIN, FUN, …)
data2018.copy$prueba<- apply(data2018.copy, 1, f)
f<- function(x) {
date <- x[1]
year <- paste(as.character(year(ymd(date))),'-03-21', collapse = "")
print(year)
if (date >= as.Date(year))
return('Primavera')
else
return('Invierno')
}
#apply(X, MARGIN, FUN, …)
data2018.copy$prueba<- apply(data2018.copy, 1, f)
f<- function(x) {
date <- x[1]
year <- paste(year(ymd(date)),'-03-21', collapse = "")
print(year)
if (date >= as.Date(year))
return('Primavera')
else
return('Invierno')
}
#apply(X, MARGIN, FUN, …)
data2018.copy$prueba<- apply(data2018.copy, 1, f)
f<- function(x) {
date <- x[1]
year <- paste(year(ymd(date)),'-03-21', collapse = NULL))
print(year)
if (date >= as.Date(year))
return('Primavera')
else
return('Invierno')
}
f<- function(x) {
date <- x[1]
year <- paste(year(ymd(date)),'-03-21', collapse = NULL)
print(year)
if (date >= as.Date(year))
return('Primavera')
else
return('Invierno')
}
#apply(X, MARGIN, FUN, …)
data2018.copy$prueba<- apply(data2018.copy, 1, f)
f<- function(x) {
date <- x[1]
year <- paste(year(ymd(date)),'03-21', sep='-', collapse = NULL)
print(year)
if (date >= as.Date(year))
return('Primavera')
else
return('Invierno')
}
#apply(X, MARGIN, FUN, …)
data2018.copy$prueba<- apply(data2018.copy, 1, f)
f<- function(x) {
date <- x[1]
if (date >= as.Date(paste(year(ymd(date)),'03-21', sep='-', collapse = NULL)) & as.Date(paste(year(ymd(date)),'06-20', sep='-', collapse = NULL)))
return('Primavera')
if (date >= as.Date(paste(year(ymd(date)),'06-21', sep='-', collapse = NULL)) & as.Date(paste(year(ymd(date)),'09-20', sep='-', collapse = NULL)))
return('Verano')
if (date >= as.Date(paste(year(ymd(date)),'09-21', sep='-', collapse = NULL)) & as.Date(paste(year(ymd(date)),'12-20', sep='-', collapse = NULL)))
return('Otoño')
else
return('Invierno')
}
#apply(X, MARGIN, FUN, …)
data2018.copy$prueba<- apply(data2018.copy, 1, f)
f<- function(x) {
date <- as.Date(x[1])
if (date >= as.Date(paste(year(ymd(date)),'03-21', sep='-', collapse = NULL)) & as.Date(paste(year(ymd(date)),'06-20', sep='-', collapse = NULL)))
return('Primavera')
if (date >= as.Date(paste(year(ymd(date)),'06-21', sep='-', collapse = NULL)) & as.Date(paste(year(ymd(date)),'09-20', sep='-', collapse = NULL)))
return('Verano')
if (date >= as.Date(paste(year(ymd(date)),'09-21', sep='-', collapse = NULL)) & as.Date(paste(year(ymd(date)),'12-20', sep='-', collapse = NULL)))
return('Otoño')
else
return('Invierno')
}
#apply(X, MARGIN, FUN, …)
data2018.copy$prueba<- apply(data2018.copy, 1, f)
f<- function(x) {
date <- x[1]
if (date >= as.Date(paste(year(ymd(date)),'03-21', sep='-', collapse = NULL)) & as.Date(paste(year(ymd(date)),'06-20', sep='-', collapse = NULL)))
return('Primavera')
else
return('Invierno')
}
#apply(X, MARGIN, FUN, …)
data2018.copy$prueba<- apply(data2018.copy, 1, f)
f<- function(x) {
date = x[1]
if (date >= as.Date('2018-03-21') & as.Date('2018-06-20'))
return('Primavera')
else
return('Invierno')
}
#apply(X, MARGIN, FUN, …)
data2018.copy$prueba<- apply(data2018.copy, 1, f)
f<- function(x) {
date <- as.Date(x[1])
if (date >= as.Date(paste(year(ymd(date)),'03-21', sep='-', collapse = NULL)) & date <= as.Date(paste(year(ymd(date)),'06-20', sep='-', collapse = NULL)))
return('Primavera')
if (date >= as.Date(paste(year(ymd(date)),'06-21', sep='-', collapse = NULL)) & date <=  as.Date(paste(year(ymd(date)),'09-20', sep='-', collapse = NULL)))
return('Verano')
if (date >= as.Date(paste(year(ymd(date)),'09-21', sep='-', collapse = NULL)) & date <=  as.Date(paste(year(ymd(date)),'12-20', sep='-', collapse = NULL)))
return('Otoño')
else
return('Invierno')
}
#apply(X, MARGIN, FUN, …)
data2018.copy$prueba<- apply(data2018.copy, 1, f)
head(data2018.copy)
f<- function(x) {
date <- as.Date(x[1])
if (date >= as.Date(paste(year(ymd(date)),'03-21', sep='-', collapse = NULL)) & date <= as.Date(paste(year(ymd(date)),'06-20', sep='-', collapse = NULL)))
return('Primavera')
if (date >= as.Date(paste(year(ymd(date)),'06-21', sep='-', collapse = NULL)) & date <=  as.Date(paste(year(ymd(date)),'09-20', sep='-', collapse = NULL)))
return('Verano')
if (date >= as.Date(paste(year(ymd(date)),'09-21', sep='-', collapse = NULL)) & date <=  as.Date(paste(year(ymd(date)),'12-20', sep='-', collapse = NULL)))
return('Otoño')
else
return('Invierno')
}
#apply(X, MARGIN, FUN, …)
data2018.copy$prueba<- apply(data2018.copy, 1, f)
f<- function(x) {
date <- as.Date(x[1])
if (date >= as.Date(paste(year(ymd(date)),'03-21', sep='-', collapse = NULL)) & date <= as.Date(paste(year(ymd(date)),'06-20', sep='-', collapse = NULL)))
return('Primavera')
if (date >= as.Date(paste(year(ymd(date)),'06-21', sep='-', collapse = NULL)) & date <=  as.Date(paste(year(ymd(date)),'09-20', sep='-', collapse = NULL)))
return('Verano')
if (date >= as.Date(paste(year(ymd(date)),'09-21', sep='-', collapse = NULL)) & date <=  as.Date(paste(year(ymd(date)),'12-20', sep='-', collapse = NULL)))
return('Otoño')
else
return('Invierno')
}
#apply(X, MARGIN, FUN, …)
data2018.copy$prueba<- apply(data2018.copy, 1, f)
head(data2018.copy)
#apply(X, MARGIN, FUN, …)
data2018.copy$estacion_del_ano<- apply(data2018.copy, 1, f)
data_tmp <- data2018.copy[data2018.copy$magnitud == 'Dioxido de nitrogeno NO2',]
data_tmp<- ddply(data_tmp, .(estacion_del_ano, magnitud), summarize, media_estacion = mean(medicion))
ggplot(data_tmp, aes(x=estacion_del_ano, media_estacion, fill=magnitud)) + geom_col(stat="identity", position="dodge") + theme() +
labs(title="Promedio contaminantes por estación del año en zonas céntricas",x="Estación del año", y = "Medición") + scale_fill_brewer(palette="Dark2")
library(ggplot2)
data_tmp <- data2018.copy[data2018.copy$magnitud == 'Dioxido de nitrogeno NO2',]
data_tmp<- ddply(data_tmp, .(estacion_del_ano, magnitud), summarize, media_estacion = mean(medicion))
ggplot(data_tmp, aes(x=estacion_del_ano, media_estacion, fill=magnitud)) + geom_col(stat="identity", position="dodge") + theme() +
labs(title="Promedio contaminantes por estación del año en zonas céntricas",x="Estación del año", y = "Medición") + scale_fill_brewer(palette="Dark2")
ggplot(data_tmp, aes(x=estacion_del_ano, media_estacion, fill=magnitud)) + geom_col( position="dodge") + theme() +
labs(title="Promedio contaminantes por estación del año en zonas céntricas",x="Estación del año", y = "Medición") + scale_fill_brewer(palette="Dark2")
data_tmp <- data2018.copy[data2018.copy$estacion %in% c('Retiro','Plaza del carmen', 'Castellana'),]
data_tmp<- ddply(data_tmp, .(estacion_del_ano, magnitud), summarize, media_estacion = mean(medicion))
ggplot(data_tmp, aes(x=estacion_del_ano, media_estacion, fill=magnitud)) + geom_col( position="dodge") + theme() +
labs(title="Promedio contaminantes por estación del año en zonas céntricas",x="Estación del año", y = "Medición") + scale_fill_brewer(palette="Dark2")
